// ecGPIO2.c file

#include "stm32f4xx.h" 
#include "stm32f411xe.h"     
#include "ecGPIO2.h"      

// GPIO 초기화 함수
void GPIO_init(PinName_t pinName, uint32_t mode){
    GPIO_TypeDef * Port;
    unsigned int pin;
    ecPinmap(pinName, &Port, &pin);  // 핀 이름을 통해 포트와 핀 번호를 얻음

    // 포트에 따라 해당 GPIO 클록 활성화
    if (Port == GPIOA) RCC_GPIOA_enable();
    if (Port == GPIOB) RCC_GPIOB_enable();
    if (Port == GPIOC) RCC_GPIOC_enable();
    if (Port == GPIOD) RCC_GPIOD_enable();
    if (Port == GPIOE) RCC_GPIOE_enable();
    if (Port == GPIOH) RCC_GPIOH_enable();

    GPIO_mode(pinName, mode);  // 핀의 모드 설정 (입력, 출력, 대체 기능, 아날로그)
}

// GPIO 모드 설정 함수
void GPIO_mode(PinName_t pinName, uint32_t mode){
    GPIO_TypeDef * Port;
    unsigned int pin;
    ecPinmap(pinName, &Port, &pin);
    Port->MODER &= ~(3UL << (2 * pin)); 
    Port->MODER |= mode << (2 * pin);    // 새 모드 설정
}

// GPIO 출력 속도 설정 함수
void GPIO_ospeed(PinName_t pinName, int speed){
    GPIO_TypeDef * Port;
    unsigned int pin;
    ecPinmap(pinName, &Port, &pin);
    Port->OSPEEDR &= ~(3UL << (2 * pin));  
    Port->OSPEEDR |= speed << (2 * pin);   // 새 속도 설정
}

// GPIO 출력 함수
void GPIO_otype(PinName_t pinName, int type){
    GPIO_TypeDef * Port;
    unsigned int pin;
    ecPinmap(pinName, &Port, &pin);
    Port->OTYPER &= ~(1UL << pin);  
    Port->OTYPER |= type << pin;    // 새 타입 설정
}

// GPIO 풀업/풀다운 함수
void GPIO_pupd(PinName_t pinName, int pupd){
    GPIO_TypeDef * Port;
    unsigned int pin;
    ecPinmap(pinName, &Port, &pin);
    Port->PUPDR &= ~(3UL << (2 * pin)); 
    Port->PUPDR |= pupd << (2 * pin);    // 새 설정
}

// GPIO 핀 함수
void GPIO_write(PinName_t pinName, int output){
    GPIO_TypeDef * Port;
    unsigned int pin;
    ecPinmap(pinName, &Port, &pin);
    if(output == HIGH)
        Port->ODR |= (1UL << pin); 
    else
        Port->ODR &= ~(1UL << pin); 
}

// GPIO 핀 읽기 함수
int GPIO_read(PinName_t pinName){
    GPIO_TypeDef * Port;
    unsigned int pin;
    ecPinmap(pinName, &Port, &pin);
    return (Port->IDR & (1UL << pin)) != 0;  //상태 반환
}

// SysTick 타이머
void Delay(uint32_t ms){
    SysTick->LOAD = 16000-1;  
    SysTick->VAL = 0;
    SysTick->CTRL = 5; 

    for(uint32_t i = 0; i < ms; i++){
        while((SysTick->CTRL & 0x10000) == 0); 
    }
    SysTick->CTRL = 0; 
}

void GPIO_configure(PinName_t pin, uint32_t mode, int type, int speed, int pupd){
    GPIO_init(pin, mode);      
    GPIO_otype(pin, type);     
    GPIO_ospeed(pin, speed);  
    GPIO_pupd(pin, pupd);      
}
